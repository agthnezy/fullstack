{"ast":null,"code":"var _jsxFileName = \"/Users/nathalieagthe/unicafe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // tallenna napit omaan tilaansa\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const Header = props => {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this);\n  };\n\n  const Statistics = props => {\n    const kaikkiPalautteet = props.palautteet[0] + props.palautteet[1] + props.palautteet[2];\n\n    if (kaikkiPalautteet > 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(Statistic, {\n              text: \"Hyv\\xE4\",\n              value: props.palautteet[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n              text: \"Neutraali\",\n              value: props.palautteet[1]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n              text: \"Huono\",\n              value: props.palautteet[2]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n              text: \"Palautteita yhteens\\xE4\",\n              value: kaikkiPalautteet\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n              text: \"Keskiarvo\",\n              value: (props.palautteet[0] - props.palautteet[2]) / kaikkiPalautteet\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n              text: \"Positiivisia palautteita\",\n              value: `${props.palautteet[0] * 100 / kaikkiPalautteet} %`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Ei ole annettu yht\\xE4k\\xE4\\xE4n palautetta..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this);\n    }\n  };\n\n  const Statistic = props => {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: props.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: props.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  };\n\n  const Button = props => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: props.handleClick,\n      children: props.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      text: \"Unicafen asiakaspalaute\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => {\n        setGood(good + 1);\n        setFeedbackGiven(true);\n      },\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => {\n        setNeutral(neutral + 1);\n        setFeedbackGiven(true);\n      },\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => {\n        setBad(bad + 1);\n        setFeedbackGiven(true);\n      },\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      text: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), stats]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/nathalieagthe/unicafe/src/App.js"],"names":["React","useState","App","good","setGood","neutral","setNeutral","bad","setBad","Header","props","text","Statistics","kaikkiPalautteet","palautteet","Statistic","value","Button","handleClick","setFeedbackGiven","stats"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nconst App = () => {\n  // tallenna napit omaan tilaansa\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const Header = (props) => {\n    return (<h1>{props.text}</h1>)\n  }\n  const Statistics = (props) => {\n    const kaikkiPalautteet = props.palautteet[0] + props.palautteet[1] + props.palautteet[2];\n\n    if(kaikkiPalautteet > 0){\n        return (\n            <div>\n                <table>\n                    <tbody>\n                        <Statistic text=\"Hyvä\" value={props.palautteet[0]} />\n                        <Statistic text=\"Neutraali\" value={props.palautteet[1]} />\n                        <Statistic text=\"Huono\" value={props.palautteet[2]} />\n                        <Statistic text=\"Palautteita yhteensä\" value={kaikkiPalautteet} />\n                        <Statistic text=\"Keskiarvo\" value={(props.palautteet[0] - props.palautteet[2]) / kaikkiPalautteet} />\n                        <Statistic text=\"Positiivisia palautteita\" value={`${props.palautteet[0] * 100 / kaikkiPalautteet} %`} />\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n    else{\n        return (<p>Ei ole annettu yhtäkään palautetta..</p>)\n    }\n}\n\nconst Statistic = (props) => {\n  return (\n      <tr>\n          <td>{props.text}</td>\n          <td>{props.value}</td>\n      </tr>\n  )\n}\n\nconst Button = (props) => {\n  return (<button type=\"button\" onClick={props.handleClick}>{props.text}</button>)\n}\n\n  return (\n    <div>\n        <Header text='Unicafen asiakaspalaute' />\n        <Button handleClick={() => { setGood(good + 1); setFeedbackGiven(true) }} text=\"good\" />\n        <Button handleClick={() => { setNeutral(neutral + 1); setFeedbackGiven(true) }} text=\"neutral\" />\n        <Button handleClick={() => { setBad(bad + 1); setFeedbackGiven(true) }} text=\"bad\" />\n        <Header text=\"statistics\" />\n        {stats}\n    </div>\n)\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}